SELECT ID, NAME FROM MEMBER
UNION ALL
SELECT WRITER_ID, TITLE FROM NOTICE;

SELECT ID, NAME FROM MEMBER
MINUS
SELECT WRITER_ID, TITLE FROM NOTICE;

SELECT ID, NAME FROM MEMBER
INTERSECT
SELECT WRITER_ID, TITLE FROM NOTICE;



-- VIEW
CREATE VIEW NOTICEVIEW
AS
    SELECT N.ID, N.TITLE, N.WRITER_ID, M.NAME WRITER_NAME, COUNT(C.ID) COMMENT_CNT
    FROM
    MEMBER M
    RIGHT OUTER JOIN NOTICE N ON M.ID = N.WRITER_ID
    LEFT OUTER JOIN "COOMENT" C ON N.ID = C.NOTICE_ID
    GROUP BY N.ID, N.TITLE, N.WRITER_ID, M.NAME;
    
SELECT * FROM NOTICE_VIEW;


-- DATA DICTIONARY
SELECT * FROM DICT;

SELECT * FROM USER_TABLES;
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME='MEMBER';



-- CONSTRAINT

CREATE TABLE TEST
(
    ID VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(200) NULL,
    PHONE CHAR(13) NOT NULL,
    PWD VARCHAR2(200) DEFAULT '111'
);


-- CHECK
CREATE TABLE TEST
(
    ID VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(200) NULL,
    PHONE CHAR(13) CHECK(PHONE LIKE '010-%-____') NOT NULL,
    PWD VARCHAR2(200) DEFAULT '111'
);

ALTER TABLE TEST ADD CONSTRAINT CK_TEST_PHONE CHECK(PHONE LIKE '010-%-____');



SELECT * FROM SYS.USER_CONSTRAINTS;

ALTER TABLE MEMBER
ADD CONSTRAINT MEMBER_PHONE_CHK1 CHECK(REGEXP_LIKE(PHONE, '^01[01]-\d{3,4}-\d{4}$'));



-- primary key, foreign key, unique



-- sequence
